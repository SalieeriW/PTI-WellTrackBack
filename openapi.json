{
  "openapi": "3.1.0",
  "info": {
    "title": "WellTrack API",
    "version": "1.0.0",
    "description": "Complete API for WellTrack backend: user authentication, challenge management, ML analysis, and settings."
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered"
          },
          "409": {
            "description": "Email already registered"
          }
        }
      }
    },
    "/api/auth/change_name": {
      "post": {
        "summary": "Change user's first and last name",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id",
                  "firstname",
                  "lastname"
                ],
                "properties": {
                  "user_id": {
                    "type": "integer"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Name updated"
          }
        }
      }
    },
    "/api/auth/change_password": {
      "post": {
        "summary": "Change user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id",
                  "old_password",
                  "new_password"
                ],
                "properties": {
                  "user_id": {
                    "type": "integer"
                  },
                  "old_password": {
                    "type": "string"
                  },
                  "new_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated"
          },
          "401": {
            "description": "Old password incorrect"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/get_names/{id}": {
      "get": {
        "summary": "Get user's first and last name",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's names returned"
          },
          "500": {
            "description": "Error fetching names"
          }
        }
      }
    },
    "/api/auth/delete_account/{id}": {
      "delete": {
        "summary": "Delete a user account",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted"
          },
          "500": {
            "description": "Deletion error"
          }
        }
      }
    },
    "/api/challenges/{id}": {
      "get": {
        "summary": "Get all challenges for a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Challenge list returned"
          }
        }
      }
    },
    "/api/challenges/settings/{id}": {
      "get": {
        "summary": "Get challenge settings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings returned"
          }
        }
      },
      "post": {
        "summary": "Update challenge settings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated"
          }
        }
      }
    },
    "/api/challenges/updateProgress/{id}/{id2}": {
      "post": {
        "summary": "Update challenge progress",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "id2",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Progress updated"
          }
        }
      }
    },
    "/api/challenges/{id}/{id2}": {
      "delete": {
        "summary": "Delete a challenge",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "id2",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Challenge deleted"
          }
        }
      }
    },
    "/api/generalSettings/{id}": {
      "get": {
        "summary": "Get general user settings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings returned"
          }
        }
      },
      "post": {
        "summary": "Update general user settings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated"
          }
        }
      }
    },
    "/api/dashboard/calibrate": {
      "get": {
        "summary": "Trigger ML calibration with image",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calibration success"
          },
          "500": {
            "description": "Failed"
          }
        }
      }
    },
    "/api/dashboard/analyze/{id}": {
      "post": {
        "summary": "Analyze image posture and log results",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged analysis"
          },
          "500": {
            "description": "Failed"
          }
        }
      }
    }
  }
}